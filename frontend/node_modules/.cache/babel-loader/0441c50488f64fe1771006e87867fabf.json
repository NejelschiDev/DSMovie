{"ast":null,"code":"var _jsxFileName = \"/home/nejelschi/projetos/dsmovie/frontend/src/components/MovieStars/index.tsx\";\nimport { ReactComponent as StarFull } from \"assests/img/star-full.svg\";\nimport { ReactComponent as StarHalf } from \"assests/img/star-half.svg\";\nimport { ReactComponent as StarEmpty } from \"assests/img/star-empty.svg\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getFills(score) {\n  const fills = [0, 0, 0, 0, 0];\n  const integerPart = Math.floor(score);\n\n  for (let i = 0; i < integerPart; i++) {\n    fills[i] = 1;\n  }\n\n  const diff = score - integerPart;\n\n  if (diff > 0) {\n    fills[integerPart] = 0.5;\n  }\n\n  return fills;\n}\n\nfunction Star(_ref) {\n  let {\n    fill\n  } = _ref;\n\n  if (fill === 0) {\n    return /*#__PURE__*/_jsxDEV(StarEmpty, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  } else if (fill === 1) {\n    return /*#__PURE__*/_jsxDEV(StarFull, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(StarHalf, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_c = Star;\n\nfunction MovieStars(_ref2) {\n  let {\n    score\n  } = _ref2;\n  const fills = getFills(score);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dsmovie-stars-container\",\n    children: [/*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Star, {\n      fill: fills[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = MovieStars;\nexport default MovieStars;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Star\");\n$RefreshReg$(_c2, \"MovieStars\");","map":{"version":3,"sources":["/home/nejelschi/projetos/dsmovie/frontend/src/components/MovieStars/index.tsx"],"names":["ReactComponent","StarFull","StarHalf","StarEmpty","getFills","score","fills","integerPart","Math","floor","i","diff","Star","fill","MovieStars"],"mappings":";AAAA,SAAQA,cAAc,IAAIC,QAA1B,QAAyC,2BAAzC;AACA,SAAQD,cAAc,IAAIE,QAA1B,QAAyC,2BAAzC;AACA,SAAQF,cAAc,IAAIG,SAA1B,QAA0C,4BAA1C;AACA,OAAO,cAAP;;;AAUA,SAASC,QAAT,CAAkBC,KAAlB,EAAiC;AAC7B,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAd;AAEA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAApB;;AAEA,OAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,WAAnB,EAAgCG,CAAC,EAAjC,EAAoC;AAChCJ,IAAAA,KAAK,CAACI,CAAD,CAAL,GAAW,CAAX;AACH;;AAED,QAAMC,IAAI,GAAGN,KAAK,GAAGE,WAArB;;AACA,MAAGI,IAAI,GAAG,CAAV,EAAY;AACRL,IAAAA,KAAK,CAACC,WAAD,CAAL,GAAqB,GAArB;AACH;;AACD,SAAOD,KAAP;AACH;;AAED,SAASM,IAAT,OAAgC;AAAA,MAAlB;AAACC,IAAAA;AAAD,GAAkB;;AAE5B,MAAGA,IAAI,KAAK,CAAZ,EAAe;AACX,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAGA,IAAI,KAAK,CAAZ,EAAc;AACjB,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBAAO,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;KATQD,I;;AAWT,SAASE,UAAT,QAAoC;AAAA,MAAhB;AAACT,IAAAA;AAAD,GAAgB;AAChC,QAAMC,KAAK,GAAGF,QAAQ,CAACC,KAAD,CAAtB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,KAAK,CAAC,CAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAAC,CAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAAC,CAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAAC,CAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,KAAK,CAAC,CAAD;AAAjB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;MAZQQ,U;AAcT,eAAeA,UAAf","sourcesContent":["import {ReactComponent as StarFull} from \"assests/img/star-full.svg\";\r\nimport {ReactComponent as StarHalf} from \"assests/img/star-half.svg\";\r\nimport {ReactComponent as StarEmpty} from \"assests/img/star-empty.svg\";\r\nimport \"./styles.css\"\r\n\r\ntype Props = {\r\n    score: number\r\n}\r\n\r\ntype StarProps = {\r\n    fill: number\r\n}\r\n\r\nfunction getFills(score: number) {\r\n    const fills = [0, 0, 0, 0, 0];\r\n\r\n    const integerPart = Math.floor(score);\r\n\r\n    for(let i = 0; i < integerPart; i++){\r\n        fills[i] = 1;\r\n    }\r\n\r\n    const diff = score - integerPart;\r\n    if(diff > 0){\r\n        fills[integerPart] = 0.5;\r\n    }\r\n    return fills;\r\n}\r\n\r\nfunction Star({fill}: StarProps){\r\n\r\n    if(fill === 0) {\r\n        return <StarEmpty/>\r\n    } else if(fill === 1){\r\n        return <StarFull/>\r\n    } else {\r\n        return <StarHalf/>\r\n    }\r\n}\r\n\r\nfunction MovieStars({score}: Props) {\r\n    const fills = getFills(score);\r\n    \r\n    return (\r\n        <div className=\"dsmovie-stars-container\">\r\n            <Star fill={fills[0]}/>\r\n            <Star fill={fills[1]}/>\r\n            <Star fill={fills[2]}/>\r\n            <Star fill={fills[3]}/>\r\n            <Star fill={fills[4]}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieStars;"]},"metadata":{},"sourceType":"module"}